# -*-shell-script-*-

. "$genapp_functions/core"

config="$control_dir/config"

load_env() {
    echo "Initializing user-defined parameters"

    set +e
        . "$control_dir/env"
    set -e
    maxPost="${maxPost-__default__}"
    logLevel="${logLevel-info}"
}

create_app_skel() {
    echo "Creating plugin directories in $app_dir"
    chmod 770 "$app_dir"
    mkdir -m 770 "$app_dir/tmp"
    mkdir -m 750 "$app_dir/var"
    mkdir -m 750 "$app_dir/app"
    mkdir -m 750 "$app_dir/conf"
    mkdir -m 750 "$app_dir/lib"
}

init_vars() {
    echo "Initializing system variables in $config"

    echo "Writing system variables to $config"
    echo "export HOME=$app_dir" >> "$config"
    echo "export TMPDIR=$app_dir/tmp" >> "$config"
    echo "export LD_LIBRARY_PATH=${LD_LIBRARY_PATH-""}" >> "$config"
    echo "export log_dir=$log_dir" >> "$config"
    echo "export app_dir=$app_dir" >> "$config"
    echo "export app_port=$app_port" >> "$config"
}

parse_databases() {
    echo "Parsing env file into $config"

    _databases=""
    while read _line; do
        # Remove first and last quote.
        echo "export $(echo $_line | sed 's/="/=/;s/"[^"]*$//')" >> "$config" 

        if [[ "$_line" =~ ^DATABASE ]]; then
            _databases+=$(echo "$_line " | sed 's/="/=/;s/"[^"]*$//')
        fi
    done < "$control_dir/env"

    echo "Parsing database URLs"
    if [ -n "$_databases" ]; then
        for _db in "$_databases"; do
            _url=$(echo $_db | sed "s/DATABASE_URL_.*=//")
            _db_name=$(echo $_url | sed "s/.*\///")

            _host_regexp="s/mysql:\/\///;s/:[0-9]*\/${_db_name}//"
            _db_host=$(echo $_url | sed "$_host_regexp")

            _port_rexexp="s/mysql:\/\/$_db_host://;s/\/${_db_name}//"
            _db_port=$(echo $_url | sed "$_port_rexexp")
            _db_alias=$(echo $_db | sed "s/DATABASE_URL_//;s/=.*//")

            echo "export DATABASE_HOST_${_db_alias}=${_db_host}" >> "$config"
            echo "export DATABASE_PORT_${_db_alias}=${_db_port}" >> "$config"
            echo "export DATABASE_DB_${_db_alias}=${_db_name}" >> "$config"
        done
    fi
}
export_path() {
    echo "Exporting paths for $1"
    echo "export PATH=$app_dir/lib/$1/bin:\$PATH" >> "$config"
    echo "export LD_LIBRARY_PATH=$app_dir/lib/$1/lib:\$LD_LIBRARY_PATH" >> \
         "$config"
}

install_lib() {
    echo "Installing $1"
    unzip -q "$plugin_dir/lib/$1.zip" -d "$app_dir/lib/$1"

    echo "Rewriting $1 permissions"
    chmod -R g-w "$app_dir/lib/$1"

    export_path "$1"
}

install_libs() {
    for _lib in $1; do
        install_lib "$_lib"
    done
}

config_php() {
    echo "Configuring PHP"
    _phpini="$app_dir/conf/php.ini"

    mkdir -m 770 "$log_dir/php"
    touch "$log_dir/php/error.log"
    chmod 660 "$log_dir/php/error.log"
    mkdir -m 770 "$app_dir/var/php"

    install -m 640 "$plugin_dir/conf/php.ini" "$_phpini"

    _subs="s@{{app_dir}}@$app_dir@g"
    _subs+=";s@{{log_dir}}@$log_dir@g"

    if [[ "$maxPost" == "__default__" ]]; then
        _subs+=";s@{{max_post}}@100K@g"
        echo "file_uploads = Off" >> "$_phpini"
    else
        _subs+=";s@{{max_post}}@${maxPost}M@g"
        echo "file_uploads = On" >> "$_phpini"
    fi

    sed -i "$_subs" "$_phpini"
}

config_httpd() {
    echo "Configuring httpd"
    _htconf="$app_dir/conf/httpd.conf"

    ln -s "$app_dir/lib/php/lib/libphp5.so" \
          "$app_dir/lib/httpd/modules/libphp5.so"
    chmod -R 770 "$app_dir/lib/httpd/logs"
    mkdir -m 770 "$log_dir/httpd"
    install -m 640 "$plugin_dir/conf/httpd.conf" "$_htconf"

    for _file in head site tail; do
        touch "$app_dir/conf/httpd.${_file}.conf"
        chmod 640 "$app_dir/conf/httpd.${_file}.conf"
    done

    _memsize=$(metadata cgroup_mem_limit)
    case "$_memsize" in
        "128M") _mult=1;;
        "256M") _mult=2;;
        "512M") _mult=4;;
        "1024M") _mult=8;;
        "2048M") _mult=16;;
        "4096M") _mult=32;;
    esac

    if [[ "$maxPost" == "__default__" ]]; then
        _maxbytes=102400
    else   
        _maxbytes=$(($maxPost*1024*1024))
    fi

    _subs="s@{{app_dir}}@$app_dir@g"
    _subs+=";s@{{app_port}}@$app_port@g"

    _subs+=";s@{{log_dir}}@$log_dir@g"
    _subs+=";s@{{loglevel}}@$logLevel@g"
    _subs+=";s@{{tee}}@$(which tee)@g"

    _subs+=";s@{{maxbytes}}@$_maxbytes@g"
    _subs+=";s@{{mult5}}@$(($_mult*5))@g"
    _subs+=";s@{{mult2}}@$(($_mult*2))@g"
    _subs+=";s@{{mult}}@$_mult@g"

    sed -i "$_subs" "$_htconf"
}

install_app() {
    echo "Copying application files to $app_dir/app"
    cp -a "$pkg_dir/"* "$app_dir/app/"

    if [ -d "$pkg_dir/.conf" ]; then
        echo "Found .conf dir, copying config files"
        _dir=$(pwd)
        cd "$pkg_dir/.conf"
            for _file in *; do
                cat "$_file" >> "$app_dir/conf/$_file"
            done
        cd "$_dir"
    fi
    
    echo "Rewriting application permissions"
    chmod -R g-w "$app_dir/app"
}

write_control() {
    echo "Writing control scripts to $control_dir"
    _dir=$(pwd)
    cd "$plugin_dir/control"
        for _file in *; do
            install -m 550 "$_file" "$control_dir/$_file"
        done
    cd "$_dir"
}